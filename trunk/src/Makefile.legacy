# legacy libmpg123/Makefilefor mpg123

# copyright ?-2006 by the mpg123 project - free software under the terms of the LGPL 2.1
# see COPYING and AUTHORS files in distribution or http://mpg123.o rg
# initially written by Michael Hipp


# Where to install binary and manpage on "make install":

PREFIX=/usr/local
BINDIR=$(PREFIX)/bin
MANDIR=$(PREFIX)/man
MAKEFILE=Makefile.legacy
MAKELINE=$(MAKE) -f $(MAKEFILE)
SECTION=1
PENTIUM_OPT=-DOPT_I586
PENTIUM_DECODE=decode_i586
#PENTIUM_OPT=-DOPT_I586_DITHER
#PENTIUM_DECODE=decode_i586_dither

CPPFLAGS:= -DGAPLESS -Ilibmpg123 -I. $(CPPFLAGS)

###################################################
######                                       ######
######   End of user-configurable settings   ######
######                                       ######
###################################################

nothing-specified:
	@echo "WARNING: Makefile.legacy is not well supported!"
	@echo "Only few targets are actually tested during development."
	@echo "You may have to hack you target to make it work"
	@echo ""
	@echo "You must specify the system which you want to compile for:"
	@echo ""
	@echo "make linux-help     Linux, more help"
	@echo "make freebsd-help   FreeBSD more help"
	@echo "make solaris        Solaris 2.x (tested: 2.5 and 2.5.1) using SparcWorks cc"
	@echo "make solaris-gcc    Solaris 2.x using GNU cc (somewhat slower)"
	@echo "make solaris-gcc-esd     Solaris 2.x using gnu cc and Esound as audio output"
	@echo "make solaris-x86-gcc-oss Solaris with (commercial) OSS"
	@echo "make solaris-gcc-nas     Solaris with gcc and NAS"
	@echo "make sunos          SunOS 4.x (tested: 4.1.4)"
	@echo "make hpux           HP/UX 9/10, /7xx"
	@echo "make hpux-gcc       HP/UX 9/10, /7xx using GCC cc"
	@echo "make hpux-alib      HP/UX with ALIB audio"
	@echo "make sgi            SGI running IRIX"
	@echo "make sgi-gcc        SGI running IRIX using GCC cc"
	@echo "make dec            DEC Unix (tested: 3.2 and 4.0), OSF/1"
	@echo "make ultrix         DEC Ultrix (tested: 4.4)"
	@echo "make aix-gcc        IBM AIX using gcc (tested: 4.2)"
	@echo "make aix-xlc        IBM AIX using xlc (tested: 4.3)"
	@echo "make os2            IBM OS/2"
	@echo "make netbsd         NetBSD"
	@echo "make netbsd-x86     NetBSD with i486 optimization"
	@echo "make netbsd-rt      NetBSD with realtime priority code"
	@echo "make netbsd-x86-rt  NetBSD with i486 optimization and realtime priority code"
	@echo "make bsdos          BSDI BSD/OS"
	@echo "make bsdos4         BSDI BSD/OS 4.0"
	@echo "make bsdos-nas      BSDI BSD/OS with NAS support"
	@echo "make mint           MiNT on Atari"
	@echo "make macosx         CoreAudio on Mac OS X"
	@echo "make generic        try this one if your system isn't listed above"
	@echo ""
	@echo "Please read the file INSTALL for additional informat.o n."
	@echo ""

linux-help:
	@echo "WARNING: Makefile.legacy is not well supported!"
	@echo "Only few targets are actually tested during development."
	@echo "You may have to hack you target to make it work"
	@echo ""
	@echo "There are several Linux flavours. Choose one:"
	@echo ""
	@echo "make linux          Linux (any supported architecture, OSS audio,
	@echo "                    use that for x86-64 in 64bit mode)"
	@echo "make linux-alsa     as above with ALSA output"
	@echo ""
	@echo "The x86 targets include multiple optimized decoders among which you
	@echo "can choose at runtime (more than in separate targets listed here!)."
	@ecoh ""
	@echo "make linux-x86      Linux x86 and OSS output
	@echo "make linux-x86-alsa Linux x86 and ALSA output"
	@echo "make linux-x86-dither      Like above plus dithered decoder (+quality, ++size), OSS."
	@echo "make linux-x86-dither-alsa Like above, ALSA."
	@echo ""
	@echo "OSS audio is default on Linux... hack Makefile for ALSA or any of the others"
	@echo ""
	@echo "make linux-i386     Linux i386 (some basic optimization for all x86)"
	@echo "make linux-i486     Linux i486 (optimized for i486 ONLY)"
	@echo "make linux-i586     Linux i586 (pentium compatible)"
	@echo "make linux-i586-dither     Linux i586 (dithered decoder)"
	@echo "make linux-mmx      Linux x86/MMX, MMX optimized code"
	@echo "make linux-3dnow    Linux x86/3DNow, 3DNow optimized code"
	@echo "                    (ie with 'as' from binutils-2.9.1.0.19a or later)"
	@echo "make linux-alpha    make with minor changes for ALPHA-Linux"
	@echo ""
	@echo "The folowing targets need testing and some are likely (or even known) not to work atm!"
	@echo ""
	@echo "make linux-ppc      LinuxPPC or MkLinux for the PowerPC"
	@echo "make linux-m68k     Linux/m68k (Amiga, Atari) using OSS"
	@echo "make linux-arm      Linux on the StrongArm"
	@echo "make linux-hppa     Linux/hppa HP-PARISC using OSS"
	@echo "make linux-nas      Linux, output to Network Audio System"
	@echo "make linux-ppc-nas  Linux/PPC, output to Network Audio System"
	@echo "make linux-sparc    Linux/Sparc"
	@echo "make linux-alsa     Linux with ALSA sound driver"
	@echo "make linux-mips-alsa Linux/MIPS with ALSA sound driver"
	@echo ""
	@echo "make linux-esd      Linux, output to EsounD"
	@echo "make linux-alpha-esd Linux/Alpha, output to EsounD"
	@echo "make linux-ppc-esd  Linux/PPC, output to EsounD"
	@echo "    NOTE: esd flavours require libaudiofile, available from: "
	@echo "          http://www.68k.o rg/~michael/audiofile/"
	@echo ""
	@echo "Please read the file INSTALL for additional informat.o n."
	@echo ""

freebsd-help:
	@echo "WARNING: Makefile.legacy is not well supported!"
	@echo "Only few targets are actually tested during development."
	@echo "You may have to hack you target to make it work"
	@echo ""
	@echo "There are several FreeBSD flavours. Choose one:"
	@echo ""
	@echo "make freebsd         FreeBSD"
	@echo "make freebsd-esd     FreeBSD, output to EsounD"
	@echo ""
	@echo "Please read the file INSTALL for additional informat.o n."
	@echo ""

linux-devel:
	$(MAKELINE) OBJECTS="libmpg123/decode_i386.o libmpg123/dct64_i386.o" \
		OUTPUT_MODULE=oss \
		CC=gcc \
		CFLAGS="$(CFLAGS)  -IOPT_I386 -DREAL_IS_FLOAT -DLINUX -Wall -g \
		-DREAD_MMAP -DOSS -funroll-all-loops \
		-finline-functions -ffast-math" \
		mpg123-make

linux-profile:
	$(MAKELINE) OBJECTS="libmpg123/decode_i386.o libmpg123/dct64_i386.o" \
		OUTPUT_MODULE=oss \
		CC=gcc LDFLAGS="$(LDFLAGS) -pg" \
		CFLAGS="$(CFLAGS)  -DOPT_I386 -DREAL_IS_FLOAT -DLINUX -Wall -pg \
		-DREAD_MMAP -DOSS -funroll-all-loops \
		-finline-functions -ffast-math" \
		mpg123-make

linux:
	$(MAKELINE) CC=gcc \
		OBJECTS="libmpg123/decode.o libmpg123/dct64.o term.o" \
		OUTPUT_MODULE=oss \
		CFLAGS="$(CFLAGS)  -DOPT_GENERIC -DREAL_IS_FLOAT -DLINUX -O2 -funroll-all-loops \
			-DOSS -DHAVE_TERMIOS \
			-Wall" \
		mpg123-make

linux-alsa:
	$(MAKELINE) CC=gcc \
		AUDIO_LIB="-lasound" \
		OBJECTS="libmpg123/decode.o libmpg123/dct64.o term.o" \
		OUTPUT_MODULE=alsa \
		CFLAGS="$(CFLAGS)  -DOPT_GENERIC -DREAL_IS_FLOAT -DLINUX -O2 -funroll-all-loops \
			-DOSS -DHAVE_TERMIOS \
			-Wall" \
		mpg123-make

linux-i586:
	$(MAKELINE) CC=gcc \
		OBJECTS="libmpg123/decode_i386.o libmpg123/dct64_i386.o libmpg123/decode_i586.o \
			term.o" \
		OUTPUT_MODULE=oss \
		CFLAGS="$(CFLAGS)  $(PENTIUM_OPT) -DREAL_IS_FLOAT -DLINUX \
			-DOSS -DHAVE_TERMIOS\
			-Wall -O2 \
			-fomit-frame-pointer -funroll-all-loops \
			-finline-functions -ffast-math" \
		mpg123-make

linux-i586-dither:
	$(MAKELINE) CC=gcc \
		OBJECTS="libmpg123/decode_i386.o libmpg123/dct64_i386.o libmpg123/decode_i586_dither.o libmpg123/dnoise.o \
			term.o" \
		OUTPUT_MODULE=oss \
		CFLAGS="$(CFLAGS)  $(PENTIUM_OPT) -DREAL_IS_FLOAT -DLINUX \
			-DOSS -DHAVE_TERMIOS\
			-Wall -O2 \
			-fomit-frame-pointer -funroll-all-loops \
			-finline-functions -ffast-math" \
		mpg123-make

linux-mmx:
	$(MAKELINE) CC=gcc \
		OBJECTS="libmpg123/decode_i386.o libmpg123/dct64_mmx.o libmpg123/tabinit_mmx.o libmpg123/decode_mmx.o \
			term.o" \
		OUTPUT_MODULE=oss \
		CFLAGS=" $(CFLAGS) -DOPT_MMX -DREAL_IS_FLOAT \
			-DLINUX -DOSS -DHAVE_TERMIOS\
			-Wall -O2 \
			-fomit-frame-pointer -funroll-all-loops \
			-finline-functions -ffast-math" \
		mpg123-make

linux-mmap:
	$(MAKELINE) CC=gcc \
		OBJECTS="libmpg123/decode_i386.o libmpg123/dct64_i386.o $(PENTIUM_DECODE).o \
			term.o" \
		OUTPUT_MODULE=oss \
		CFLAGS="$(CFLAGS)  $(PENTIUM_OPT) -DREAL_IS_FLOAT -DLINUX \
			-DREAD_MMAP -DOSS -DHAVE_TERMIOS\
			-Wall -O2 \
			-fomit-frame-pointer -funroll-all-loops \
			-finline-functions -ffast-math" \
		mpg123-make

linux-3dnow:
	$(MAKELINE) CC=gcc \
		OBJECTS="libmpg123/dct64.o libmpg123/decode_i386.o libmpg123/decode_3dnow.o libmpg123/dct64_3dnow.o \
		libmpg123/dct64_i386.o libmpg123/dct36_3dnow.o libmpg123/getcpuflags.o \
		libmpg123/equalizer_3dnow.o libmpg123/decode_i586.o  term.o" \
		OUTPUT_MODULE=oss \
		CFLAGS="$(CFLAGS)  -DOPT_MULTI -DOPT_I586 -DOPT_3DNOW -DREAL_IS_FLOAT -DLINUX \
			-DOSS -DHAVE_TERMIOS\
			-Wall -O2 \
			-fomit-frame-pointer -funroll-all-loops \
			-finline-functions -ffast-math" \
		mpg123-make

linux-i486:
	$(MAKELINE) CC=gcc \
		OBJECTS="libmpg123/decode_i386.o libmpg123/dct64_i386.o\
			decode_i486.o dct64_i486.o  term.o" \
		OUTPUT_MODULE=oss \
		CFLAGS="$(CFLAGS)  -DOPT_I486 -DREAL_IS_FLOAT -DLINUX \
			-DOSS -DHAVE_TERMIOS\
			-Wall -O2 -march=i486 \
			-fomit-frame-pointer -funroll-all-loops \
			-finline-functions -ffast-math" \
		mpg123-make

linux-i386:
	$(MAKELINE) CC=gcc \
		OBJECTS="libmpg123/decode_i386.o libmpg123/dct64_i386.o \
			term.o" \
		OUTPUT_MODULE=oss \
		CFLAGS="$(CFLAGS)  -DOPT_I386 -DREAL_IS_FLOAT -DLINUX \
			-DOSS -DHAVE_TERMIOS\
			-Wall -O2 \
			-fomit-frame-pointer -funroll-all-loops \
			-finline-functions -ffast-math" \
		mpg123-make

linux-esd:
	$(MAKELINE) CC=gcc \
		AUDIO_LIB="-lesd -laudiofile" \
		OBJECTS="libmpg123/decode_i386.o libmpg123/dct64_i386.o $(PENTIUM_DECODE).o \
			term.o" \
		OUTPUT_MODULE=oss \
		CFLAGS="$(CFLAGS)  $(PENTIUM_OPT) -DREAL_IS_FLOAT -DLINUX \
			-DOSS -DUSE_ESD -DHAVE_TERMIOS\
			-Wall  -O2 -mcpu=i486 \
			-fomit-frame-pointer -funroll-all-loops \
			-finline-functions -ffast-math" \
		mpg123-make

linux-x86:
	$(MAKELINE) CC=gcc \
		AUDIO_LIB="" \
		OBJECTS="libmpg123/decode_i386.o libmpg123/dct64_i386.o \
			libmpg123/decode.o libmpg123/dct64.o \
			libmpg123/decode_i586.o \
			libmpg123/decode_3dnow.o libmpg123/dct64_3dnow.o libmpg123/dct36_3dnow.o libmpg123/equalizer_3dnow.o \
			libmpg123/dct64_3dnowext.o libmpg123/dct36_3dnowext.o libmpg123/decode_3dnowext.o \
			libmpg123/dct64_mmx.o libmpg123/tabinit_mmx.o libmpg123/decode_mmx.o \
			libmpg123/dct64_sse.o libmpg123/decode_sse.o libmpg123/getcpuflags.o \
			term.o" \
		OUTPUT_MODULE=oss \
		CFLAGS="$(CFLAGS)   -DOPT_MULTI -DOPT_GENERIC -DOPT_I386 -DOPT_I586 -DOPT_I586_DITHER -DOPT_MMX -DOPT_3DNOW -DOPT_3DNOWEXT -DOPT_SSE -DREAL_IS_FLOAT -DLINUX \
			-DALSA -DHAVE_TERMIOS\
			-Wall  -O2 \
			-fomit-frame-pointer -funroll-all-loops \
			-finline-functions -ffast-math" \
		mpg123-make

linux-x86-alsa:
	$(MAKELINE) CC=gcc \
		AUDIO_LIB="-lasound" \
		OBJECTS="libmpg123/decode_i386.o libmpg123/dct64_i386.o \
			libmpg123/decode.o libmpg123/dct64.o \
			libmpg123/decode_i586.o \
			libmpg123/decode_3dnow.o libmpg123/dct64_3dnow.o libmpg123/dct36_3dnow.o libmpg123/equalizer_3dnow.o \
			libmpg123/dct64_3dnowext.o libmpg123/dct36_3dnowext.o libmpg123/decode_3dnowext.o \
			libmpg123/dct64_mmx.o libmpg123/tabinit_mmx.o libmpg123/decode_mmx.o \
			libmpg123/dct64_sse.o libmpg123/decode_sse.o libmpg123/getcpuflags.o \
			term.o" \
		OUTPUT_MODULE=alsa \
		CFLAGS="$(CFLAGS)   -DOPT_MULTI -DOPT_GENERIC -DOPT_I386 -DOPT_I586 -DOPT_I586_DITHER -DOPT_MMX -DOPT_3DNOW -DOPT_3DNOWEXT -DOPT_SSE -DREAL_IS_FLOAT -DLINUX \
			-DALSA -DHAVE_TERMIOS\
			-Wall  -O2 \
			-fomit-frame-pointer -funroll-all-loops \
			-finline-functions -ffast-math" \
		mpg123-make

linux-x86-dither:
	$(MAKELINE) CC=gcc \
		AUDIO_LIB="" \
		OBJECTS="libmpg123/decode_i386.o libmpg123/dct64_i386.o \
			libmpg123/decode.o libmpg123/dct64.o \
			libmpg123/decode_i586.o libmpg123/decode_i586_dither.o libmpg123/dnoise.o \
			libmpg123/decode_3dnow.o libmpg123/dct64_3dnow.o libmpg123/dct36_3dnow.o libmpg123/equalizer_3dnow.o \
			libmpg123/dct64_3dnowext.o libmpg123/dct36_3dnowext.o libmpg123/decode_3dnowext.o \
			libmpg123/dct64_mmx.o libmpg123/tabinit_mmx.o libmpg123/decode_mmx.o \
			libmpg123/dct64_sse.o libmpg123/decode_sse.o libmpg123/getcpuflags.o \
			term.o" \
		OUTPUT_MODULE=oss \
		CFLAGS="$(CFLAGS)   -DOPT_MULTI -DOPT_GENERIC -DOPT_I386 -DOPT_I586 -DOPT_I586_DITHER -DOPT_MMX -DOPT_3DNOW -DOPT_3DNOWEXT -DOPT_SSE -DREAL_IS_FLOAT -DLINUX \
			-DALSA -DHAVE_TERMIOS\
			-Wall  -O2 \
			-fomit-frame-pointer -funroll-all-loops \
			-finline-functions -ffast-math" \
		mpg123-make


linux-x86-dither-alsa:
	$(MAKELINE) CC=gcc \
		AUDIO_LIB="-lasound" \
		OBJECTS="libmpg123/decode_i386.o libmpg123/dct64_i386.o \
			libmpg123/decode.o libmpg123/dct64.o \
			libmpg123/decode_i586.o libmpg123/decode_i586_dither.o libmpg123/dnoise.o \
			libmpg123/decode_3dnow.o libmpg123/dct64_3dnow.o libmpg123/dct36_3dnow.o libmpg123/equalizer_3dnow.o \
			libmpg123/dct64_3dnowext.o libmpg123/dct36_3dnowext.o libmpg123/decode_3dnowext.o \
			libmpg123/dct64_mmx.o libmpg123/tabinit_mmx.o libmpg123/decode_mmx.o \
			libmpg123/dct64_sse.o libmpg123/decode_sse.o libmpg123/getcpuflags.o \
			term.o" \
		OUTPUT_MODULE=alsa \
		CFLAGS="$(CFLAGS)   -DOPT_MULTI -DOPT_GENERIC -DOPT_I386 -DOPT_I586 -DOPT_I586_DITHER -DOPT_MMX -DOPT_3DNOW -DOPT_3DNOWEXT -DOPT_SSE -DREAL_IS_FLOAT -DLINUX \
			-DALSA -DHAVE_TERMIOS\
			-Wall  -O2 \
			-fomit-frame-pointer -funroll-all-loops \
			-finline-functions -ffast-math" \
		mpg123-make

linux-mips-alsa:
	$(MAKELINE) CC=gcc \
		AUDIO_LIB="-lasound" \
		OBJECTS="libmpg132/decode.o libmpg123/dct64.o  term.o" \
		OUTPUT_MODULE=alsa \
		CFLAGS="$(CFLAGS)  -DOPT_GENERIC -DREAL_IS_FLOAT -DLINUX -DALSA \
			-DHAVE_TERMIOS -Wall  -O2 \
			-fomit-frame-pointer -funroll-all-loops \
			-finline-functions -ffast-math" \
		mpg123-make

linux-alpha:
	$(MAKELINE) CC=gcc OBJECTS="libmpg123/decode.o libmpg123/dct64.o  term.o" \
		OUTPUT_MODULE=oss \
		CFLAGS="$(CFLAGS)  -DOPT_GENERIC -DLINUX -DOSS -DHAVE_TERMIOS -Wall -O2 \
			-fomit-frame-pointer -funroll-all-loops \
			-finline-functions -ffast-math \
			-Wall -O6 -DHAVE_MMAP" \
		mpg123-make

linux-alpha-esd:
	$(MAKELINE) CC=gcc \
		AUDIO_LIB="-lesd -laudiofile" \
		OUTPUT_MODULE=esd \
		OBJECTS="libmpg123/decode.o libmpg123/dct64.o term.o" \
		CFLAGS="$(CFLAGS)  -DOPT_GENERIC -DLINUX -DOSS -DHAVE_TERMIOS -Wall -O2 \
			-fomit-frame-pointer -funroll-all-loops \
			-finline-functions -ffast-math \
			-Wall -O6 -DHAVE_MMAP" \
		mpg123-make

linux-ppc:
	$(MAKELINE) CC=gcc \
		OBJECTS="libmpg123/decode.o libmpg123/dct64.o term.o" \
		OUTPUT_MODULE=oss \
		CFLAGS="$(CFLAGS)  -DOPT_GENERIC -DREAL_IS_FLOAT -DLINUX -Wall -O2 -mcpu=powerpc \
			-DOSS -DHAVE_TERMIOS\
			-fomit-frame-pointer -funroll-all-loops \
			-finline-functions -ffast-math" \
		mpg123-make

linux-ppc-esd:
	$(MAKELINE) CC=gcc \
		AUDIO_LIB="-lesd -laudiofile" \
		OUTPUT_MODULE=esd \
		OBJECTS="libmpg123/decode.o libmpg123/dct64.o term.o" \
		CFLAGS="$(CFLAGS)  -DOPT_GENERIC -DREAL_IS_FLOAT -DLINUX -Wall -O2 -mcpu=powerpc \
			-DOSS  -DHAVE_TERMIOS\
			-fomit-frame-pointer -funroll-all-loops \
			-finline-functions -ffast-math" \
		mpg123-make

linux-ppc-nas:
	$(MAKELINE) CC=gcc LDFLAGS='-L/usr/X11R6/lib' \
		AUDIO_LIB='-laudio -lXau -lXt' \
		OUTPUT_MODULE=nas \
		OBJECTS='libmpg123/decode.o libmpg123/dct64.o term.o' \
		CFLAGS="-I/usr/X11R6/include -DOPT_GENERIC -DREAL_IS_FLOAT -DLINUX -DNAS -DTERM_CONTROL \
			-Wall -O2 -mcpu=powerpc \
			-fomit-frame-pointer -funroll-all-loops \
			-finline-functions -ffast-math" \
		mpg123-make

# Hm, not also OSS audio? But generic linux-alsa should do it, also.
linux-sparc:
	$(MAKELINE) CC=gcc \
		OBJECTS="libmpg123/decode.o libmpg123/dct64.o term.o" \
		OUTPUT_MODULE=sun \
		CFLAGS="$(CFLAGS)  -DOPT_GENERIC -DREAL_IS_FLOAT -DHAVE_MMAP -DSPARCLINUX -Wall -O2 \
			-DHAVE_TERMIOS \
			-fomit-frame-pointer -funroll-all-loops \
			-finline-functions -ffast-math" \
		mpg123-make

linux-hppa:
	$(MAKELINE) CC=gcc \
		OBJECTS="libmpg123/decode.o libmpg123/dct64.o  term.o" \
		OUTPUT_MODULE=oss \
		CFLAGS="$(CFLAGS)  -DOPT_GENERIC -DREAL_IS_FLOAT -DLINUX -Wall -O2 \
			-DHAVE_TERMIOS \
			-fomit-frame-pointer -funroll-all-loops \
			-finline-functions -ffast-math" \
		mpg123-make

linux-m68k:
	$(MAKELINE) CC=gcc OBJECTS="libmpg123/decode.o libmpg123/dct64.o  term.o" \
		OUTPUT_MODULE=oss \
		CFLAGS="$(CFLAGS)  -DOPT_GENERIC -DREAL_IS_FLOAT -DLINUX -DHAVE_TERMIOS \
			-DOSS -DOSS_BIG_ENDIAN -Wall -O2 -m68040 \
			-fomit-frame-pointer -funroll-loops \
			-finline-functions -ffast-math" \
		mpg123-make

linux-arm:
	$(MAKELINE) CC=gcc OBJECTS="libmpg123/decode.o libmpg123/dct64.o  term.o" \
		OUTPUT_MODULE=oss \
		CFLAGS="$(CFLAGS)  -DOPT_GENERIC -DREAL_IS_FIXED -DLINUX -DHAVE_TERMIOS \
			-DOSS -Wall -O6 -mtune=xscale \
			-fomit-frame-pointer -funroll-all-loops \
			-finline-functions -ffast-math" \
		mpg123-make

linux-nas:
	$(MAKELINE) CC=gcc LDFLAGS="$(LDFLAGS) -L/usr/X11R6/lib" \
		OUTPUT_MODULE=nas \
		AUDIO_LIB="-laudio -lXau -lXt" \
		OBJECTS="decode_i386.o libmpg123/dct64_i386.o  term.o" \
		CFLAGS="$(CFLAGS)  -I/usr/X11R6/include \
			-DOPT_I386 -DREAL_IS_FLOAT -DLINUX -DNAS \
			-DHAVE_TERMIOS \
			-Wall -O2 -mcpu=i486 \
			-fomit-frame-pointer -funroll-all-loops \
			-finline-functions -ffast-math" \
		mpg123-make

freebsd:
	$(MAKELINE) CC=cc \
		OUTPUT_MODULE=oss \
		OBJECTS="decode_i386.o libmpg123/dct64_i386.o " \
		CFLAGS="$(CFLAGS)  -DOPT_I386 -Wall -ansi -pedantic -O4 -fomit-frame-pointer \
			-funroll-all-loops -ffast-math -DROT_I386 \
			-DREAD_MMAP \
			-DI386_ASSEM -DREAL_IS_FLOAT -DHAVE_MMAP -DOSS" \
		mpg123-make

freebsd-esd:
	$(MAKELINE) CC=cc \
		OUTPUT_MODULE=esd \
		AUDIO_LIB="-lesd -laudiofile" \
		OBJECTS="decode_i386.o libmpg123/dct64_i386.o $(GETBITS) " \
		CFLAGS="$(CFLAGS)  -DOPT_I386 -Wall -ansi -pedantic -O4 -fomit-frame-pointer \
			-funroll-all-loops -ffast-math -DROT_I386 \
			-DREAD_MMAP \
		  -DREAL_IS_FLOAT -DHAVE_MMAP -DOSS \
			-I/usr/local/include -L/usr/local/lib" \
		mpg123-make

# -mno-epilogue
# -mflat -mv8 -mcpu=ultrasparc

# these are MY EXPERIMENTAL compile entries
solaris-pure:
	$(MAKELINE) CC="purify -cache-dir=/tmp cc" \
		OUTPUT_MODULE=sun \
		LDFLAGS="$(LDFLAGS) -lsocket -lnsl" \
		OBJECTS="libmpg123/decode.o libmpg123/dct64.o  term.o" \
		CFLAGS="$(CFLAGS)  -fast -native -xO4 -DSOLARIS -DHAVE_TERMIOS \
			-DHAVE_MMAP" \
		mpg123-make

solaris-ccscc:
	$(MAKELINE) CC=/usr/ccs/bin/ucbcc LDFLAGS="$(LDFLAGS) -lsocket -lnsl" \
		OUTPUT_MODULE=sun \
		OBJECTS="libmpg123/decode.o libmpg123/dct64.o  term.o" \
		CFLAGS="$(CFLAGS)  -fast -native -xO4 -DSOLARIS \
			-DHAVE_MMAP" \
		mpg123-make

# common solaris compile entries
SOLARIS_DEFINES=-DHAVE_SYS_AUDIO_H -DHAVE_SYS_AUDIOIO_H -DHAVE_SIGNAL_H
solaris:
	$(MAKELINE) CC=cc LDFLAGS="$(LDFLAGS) -lsocket -lnsl -lrt" \
		OUTPUT_MODULE=sun \
		OBJECTS="libmpg123/decode.o libmpg123/dct64.o  term.o" \
		CFLAGS="$(CFLAGS) -fast -DOPT_GENERIC -native -xO4 -DSOLARIS $(SOLARIS_DEFINES) \
			-DHAVE_MMAP -DHAVE_TERMIOS" \
		mpg123-make

solaris-gcc-profile:
	$(MAKELINE) CC=gcc \
		OUTPUT_MODULE=sun \
		LDFLAGS="$(LDFLAGS) -lsocket -lnsl -pg" \
		OBJECTS="libmpg123/decode.o libmpg123/dct64.o " \
		CFLAGS="$(CFLAGS)  -DOPT_GENERIC -g -pg -O2 -Wall -DSOLARIS -DREAL_IS_FLOAT -DHAVE_MMAP \
			-DREAD_MMAP \
			-funroll-all-loops -finline-functions" \
		mpg123-make

solaris-gcc:
	$(MAKELINE) CC=gcc \
		OUTPUT_MODULE=sun \
		LDFLAGS="$(LDFLAGS) -lsocket -lnsl" \
		OBJECTS="libmpg123/decode.o libmpg123/dct64.o  term.o" \
		CFLAGS="$(CFLAGS)  -DOPT_GENERIC -O2 -Wall -pedantic -DSOLARIS -DREAL_IS_FLOAT -DHAVE_MMAP \
			-DREAD_MMAP -DHAVE_TERMIOS \
			-funroll-all-loops  -finline-functions" \
		mpg123-make

solaris-gcc-esd:
	$(MAKELINE) CC=gcc LDFLAGS="$(LDFLAGS) -lsocket -lnsl" \
		OUTPUT_MODULE=esd \
		AUDIO_LIB="-lesd -lresolv" \
		OBJECTS="libmpg123/decode.o libmpg123/dct64.o " \
		CFLAGS="$(CFLAGS)  -DOPT_GENERIC -O2 -Wall -DSOLARIS -DREAL_IS_FLOAT -DHAVE_MMAP \
			-DREAD_MMAP \
			-funroll-all-loops -finline-functions" \
		mpg123-make

solaris-x86-gcc-oss:
	$(MAKELINE) CC=gcc LDFLAGS="$(LDFLAGS) -lsocket -lnsl" \
		OUTPUT_MODULE=oss \
		OBJECTS="decode_i386.o libmpg123/dct64_i386.o $(PENTIUM_DECODE).o \
			" \
		CFLAGS="$(CFLAGS)  -DOPT_I586 -DREAL_IS_FLOAT  -DHAVE_MMAP \
			-DREAD_MMAP -DOSS \
			-Wall -O2 -mcpu=i486 \
			-funroll-all-loops -finline-functions" \
		mpg123-make

solaris-gcc-nas:
	$(MAKELINE) CC=gcc LDFLAGS="$(LDFLAGS) -lsocket -lnsl" \
		AUDIO_LIB="-L/usr/openwin/lib -laudio -lXau"\
		OUTPUT_MODULE=nas \
		OBJECTS="libmpg123/decode.o libmpg123/dct64.o " \
		CFLAGS="$(CFLAGS)  -DOPT_GENERIC -O2 -I/usr/openwin/include -Wall \
			-DSOLARIS -DREAL_IS_FLOAT -DHAVE_MMAP \
			-DREAD_MMAP -DNAS \
			-funroll-all-loops -finline-functions" \
		mpg123-make

sunos:
	$(MAKELINE) CC=gcc \
		OUTPUT_MODULE=sun \
		OBJECTS="libmpg123/decode.o libmpg123/dct64.o " \
		CFLAGS="$(CFLAGS)  -O2 -DOPT_GENERIC  -DSUNOS -DREAL_IS_FLOAT -DHAVE_MMAP \
			-funroll-loops" \
		mpg123-make

#		CFLAGS='-DREAL_IS_FLOAT -Aa +O3 -D_HPUX_SOURCE -DHPUX'
hpux:
	$(MAKELINE) CC=cc \
		OUTPUT_MODULE=hp \
		OBJECTS="libmpg123/decode.o libmpg123/dct64.o " \
		CFLAGS="$(CFLAGS)  -DOPT_GENERIC -DREAL_IS_FLOAT -Ae +O3 -D_HPUX_SOURCE -DHPUX" \
		mpg123-make

hpux-alib:
	$(MAKELINE) CC=cc LDFLAGS="$(LDFLAGS) -L/opt/audio/lib" \
		OBJECTS="libmpg123/decode.o libmpg123/dct64.o " \
		OUTPUT_MODULE=alib \
		AUDIO_LIB=-lAlib \
		CFLAGS="$(CFLAGS)  -DREAL_IS_FLOAT -Ae +O3 -D_HPUX_SOURCE -DHPUX \
			-I/opt/audio/include" \
		mpg123-make

hpux-gcc:
	$(MAKELINE) CC=gcc OBJECTS="libmpg123/decode.o libmpg123/dct64.o " \
		OUTPUT_MODULE=hp \
		CFLAGS="$(CFLAGS)  -DOPT_GENERIC -DREAL_IS_FLOAT -O3 -D_HPUX_SOURCE -DHPUX" \
		mpg123-make
sgi:
	$(MAKELINE) CC=cc \
		OUTPUT_MODULE=sgi \
		OBJECTS="libmpg123/decode.o libmpg123/dct64.o " AUDIO_LIB=-laudio \
		CFLAGS="$(CFLAGS)  -DOPT_GENERIC -O2 -DSGI -DREAL_IS_FLOAT -DHAVE_MMAP" \
		mpg123-make

sgi-gcc:
	$(MAKELINE) CC=gcc \
		OUTPUT_MODULE=sgi \
		OBJECTS="libmpg123/decode.o libmpg123/dct64.o " AUDIO_LIB=-laudio \
		CFLAGS="$(CFLAGS)  -DOPT_GENERIC -O2 -DSGI -DREAL_IS_FLOAT -DHAVE_MMAP" \
		mpg123-make

dec:
	@echo You might want to try OSS on DEC Unix/Tru64/OSF1.
	$(MAKELINE) CC=cc OBJECTS="libmpg123/decode.o libmpg123/dct64.o " \
		OUTPUT_MODULE=dummy \
		CFLAGS="$(CFLAGS)  -DOPT_GENERIC -std1 -warnprotos -O4 -DHAVE_MMAP" \
		LDFLAGS="$(LDFLAGS) -lrt" \
		mpg123-make

dec-debug:
	$(MAKELINE) CC=cc OBJECTS="libmpg123/decode.o libmpg123/dct64.o " \
		OUTPUT_MODULE=dummy \
		CFLAGS="$(CFLAGS)  -DOPT_GENERIC -g3 -std1 -warnprotos -O4 -DHAVE_MMAP" \
		LDFLAGS="$(LDFLAGS) -lrt" \
		mpg123-make

dec-nas:
	$(MAKELINE) CC=cc LDFLAGS="$(LDFLAGS) -L/usr/X11R6/lib" \
		AUDIO_LIB="-laudio -lXau -ldnet_stub"\
		OUTPUT_MODULE=nas \
		OBJECTS="libmpg123/decode.o libmpg123/dct64.o " \
		CFLAGS="$(CFLAGS)  -DOPT_GENERIC -I/usr/X11R6/include -std1 -warnprotos -O4 -DHAVE_MMAP" \
		mpg123-make

ultrix:
	$(MAKELINE) CC=cc OBJECTS="libmpg123/decode.o libmpg123/dct64.o " \
		OUTPUT_MODULE=dummy \
		CFLAGS="$(CFLAGS)  -DOPT_GENERIC -std1 -O2 -DULTRIX" \
		mpg123-make

aix-gcc:
	$(MAKELINE) CC=gcc OBJECTS="libmpg123/decode.o libmpg123/dct64.o " \
		OUTPUT_MODULE=aix \
		CFLAGS="$(CFLAGS)  -DOPT_GENERIC -DAIX -Wall -O6 -DHAVE_MMAP -DREAD_MMAP -DREAL_IS_FLOAT \
			-fomit-frame-pointer -funroll-all-loops \
			-finline-functions -ffast-math" \
		mpg123-make

aix-xlc:
	$(MAKELINE) OBJECTS="libmpg123/decode.o libmpg123/dct64.o " \
		OUTPUT_MODULE=aix \
		CFLAGS="$(CFLAGS)  -DOPT_GENERIC -O3 -qstrict -qcpluscmt -DAIX -DHAVE_MMAP \
			-DREAD_MMAP" \
		mpg123-make

os2:
	$(MAKELINE) CC=gcc \
		OUTPUT_MODULE=os2 \
		OBJECTS="decode_i386.o libmpg123/dct64_i386.o " \
		CFLAGS="$(CFLAGS)  -DOPT_I386 DREAL_IS_FLOAT -DNOXFERMEM -DOS2 -Wall -O2 -mcpu=i486 \
		-fomit-frame-pointer -funroll-all-loops \
		-finline-functions -ffast-math" \
		LIBS="-los2me -lsocket" \
		mpg123.exe

netbsd:
	$(MAKELINE) CC=cc \
		OUTPUT_MODULE=sun \
		OBJECTS="libmpg123/decode.o libmpg123/dct64.o " \
		CFLAGS="$(CFLAGS)  -DOPT_GENERIC -Wall -ansi -pedantic -O3 -fomit-frame-pointer \
			-funroll-all-loops -ffast-math \
			-DREAL_IS_FLOAT -DHAVE_MMAP -DNETBSD -DNO_RT" \
		mpg123-make

netbsd-x86:
	$(MAKELINE) CC=cc \
		OUTPUT_MODULE=sun \
		OBJECTS="decode_i386.o libmpg123/dct64_i386.o " \
		CFLAGS="$(CFLAGS)  -DOPT_I386 -Wall -ansi -pedantic -O4 -mcpu=i486 -fomit-frame-pointer \
			-funroll-all-loops -ffast-math -DROT_I386 \
			-DI386_ASSEM -DREAL_IS_FLOAT -DHAVE_MMAP -DNETBSD -DNO_RT" \
		mpg123-make

netbsd-rt:
	$(MAKELINE) CC=cc LDFLAGS="$(LDFLAGS) -lpthread" \
		OUTPUT_MODULE=sun \
		OBJECTS=" libmpg123/dct64.o " \
		CFLAGS="$(CFLAGS)  -DOPT_GENERIC -Wall -ansi -pedantic -O3 -fomit-frame-pointer \
			-funroll-all-loops -ffast-math \
			-DREAL_IS_FLOAT -DHAVE_MMAP -DNETBSD" \
		mpg123-make

netbsd-x86-rt:
	$(MAKELINE) CC=cc LDFLAGS="$(LDFLAGS) -lpthread" \
		OUTPUT_MODULE=sun \
		OBJECTS="decode_i386.o libmpg123/dct64_i386.o " \
		CFLAGS="$(CFLAGS)  -DOPT_I386 -Wall -ansi -pedantic -O4 -mcpu=i486 -fomit-frame-pointer \
			-funroll-all-loops -ffast-math -DROT_I386 \
			-DREAL_IS_FLOAT -DHAVE_MMAP -DNETBSD" \
		mpg123-make

bsdos:
	$(MAKELINE) CC=shlicc2 \
		OBJECTS="decode_i386.o libmpg123/dct64_i386.o" \
		OUTPUT_MODULE=oss \
		CFLAGS="$(CFLAGS)  -Wall -O4 -mcpu=i486 -fomit-frame-pointer \
			-funroll-all-loops -ffast-math -DROT_I386 \
			-DI386_ASSEM -DREAL_IS_FLOAT -DHAVE_MMAP -DOSS \
			-DDONT_CATCH_SIGNALS" \
		mpg123-make

bsdos4:
	$(MAKELINE) CC=gcc \
		OUTPUT_MODULE=oss \
		OBJECTS="decode_i386.o libmpg123/dct64_i386.o " \
		CFLAGS="$(CFLAGS)  -Wall -O4 -mcpu=i486 -fomit-frame-pointer \
			-funroll-all-loops -ffast-math -DROT_I386 \
			-DOPT_I386 -DREAL_IS_FLOAT -DHAVE_MMAP -DOSS \
			-DREAD_MMAP -DDONT_CATCH_SIGNALS" \
		mpg123-make

bsdos-nas:
	$(MAKELINE) CC=shlicc2 \
		OUTPUT_MODULE=nas \
		AUDIO_LIB="-laudio -lXau -L/usr/X11R6/lib" \
		OBJECTS="decode_i386.o libmpg123/dct64_i386.o\
			" \
		CFLAGS="$(CFLAGS)  -Wall -O4 -mcpu=i486 -fomit-frame-pointer \
			-funroll-all-loops -ffast-math -DROT_I386 \
			-DOPT_I386 -DREAL_IS_FLOAT -DHAVE_MMAP -DOSS \
			-DDONT_CATCH_SIGNALS -DNAS" \
		mpg123-make

mint:
	$(MAKELINE) CC=gcc \
		OUTPUT_MODULE=mint \
		OBJECTS="libmpg123/decode.o libmpg123/dct64.o " \
		CFLAGS="$(CFLAGS)  -DOPT_GENERIC  -Wall -O2 -m68020-40 -m68881 \
		-fomit-frame-pointer -funroll-all-loops \
		-finline-functions -ffast-math \
		-DREAL_IS_FLOAT -DMINT -DNOXFERMEM" \
		AUDIO_LIB='-lsocket' \
		mpg123-make

macosx:
	$(MAKELINE) CC=gcc \
		OBJECTS="decode.o dct64.o sfifo.o term.o" \
		OUTPUT_MODULE=coreaudio \
		CFLAGS="$(CFLAGS)  \
			-DREAL_IS_FLOAT -DHAVE_TERMIOS -DNO_RT -DOPT_GENERIC \
			-Wall -O2 -fomit-frame-pointer -funroll-all-loops \
			-finline-functions -ffast-math" \
		AUDIO_LIB="-framework AudioToolbox -framework AudioUnit -framework CoreServices" \
		mpg123-make

# maybe you need the additonal options LDFLAGS='-lnsl -lsocket' when linking (see solaris:)
generic:
	$(MAKELINE) LDFLAGS= OBJECTS="libmpg123/decode.o libmpg123/dct64.o " \
		OUTPUT_MODULE=dummy \
		CFLAGS="$(CFLAGS)  -DOPT_GENERIC -DGENERIC -DNOXFERMEM" \
		mpg123-make

###########################################################################
###########################################################################
###########################################################################

mpg123-make:
	@ $(MAKELINE) BINNAME=mpg123 mpg123

LIBOBJECTS= \
libmpg123/parse.o libmpg123/frame.o libmpg123/format.o libmpg123/decode_2to1.o \
libmpg123/decode_4to1.o libmpg123/decode_ntom.o libmpg123/equalizer.o libmpg123/icy.o \
libmpg123/id3.o libmpg123/layer1.o libmpg123/layer2.o libmpg123/layer3.o \
libmpg123/optimize.o libmpg123/readers.o libmpg123/tabinit.o \
libmpg123/stringbuf.o libmpg123/libmpg123.o libmpg123/compat.o

COREOBJECTS= mpg123.o genre.o playlist.o id3print.o common.o audio.o buffer.o getlopt.o httpget.o wav.o 

MAINOBJECTS= xfermem.o control_generic.o

mpg123: $(COREOBJECTS) $(MAINOBJECTS) $(LIBOBJECTS) $(OBJECTS) legacy_module.o output/$(OUTPUT_MODULE).o $(MAKEFILE)
	$(CC) $(CFLAGS) $(COREOBJECTS) $(MAINOBJECTS) $(LIBOBJECTS) $(OBJECTS) legacy_module.o output/$(OUTPUT_MODULE).o -o $(BINNAME) $(LDFLAGS) -lm $(AUDIO_LIB) $(LIBS)

# not really...
#mpg123.exe: $(COREOBJECTS) $(LIBOBJECTS) $(OBJECTS) legacy_module.o output/$(OUTPUT_MODULE).o $(MAKEFILE)
#	$(CC) $(CFLAGS) $(LDFLAGS) $^ -o mpg123.exe -lm $(LIBS)

%.o: %.c
	$(CC) $(CFLAGS) $(CPPFLAGS) -DDEFAULT_OUTPUT_MODULE="\"$(OUTPUT_MODULE)\"" -c -o $@ $<

# Something along that may be needed if supporting Win32 build here.
#%.S: %.o
#	$(CPP) $(AM_CPPFLAGS) $(DEFAULT_INCLUDES) $(CPPFLAGS) $< > $<.s
#	$(CCAS) $(CCASFLAGS) -c -o $@ $<.s && rm $<.s

###########################################################################
###########################################################################
###########################################################################

# I'm really too lazy to fix that manually... let gcc do the work:

#find -name '*.c' | sort | while read i; do test "$(dirname $i)" != "." && echo -n $(dirname $i)/ | perl -pe 's,^\./,,'; gcc -Ilibmpg123 -I. -MM $i; done
#find -name '*.S' | sort | while read i; do test "$(dirname $i)" != "." && echo -n $(dirname $i)/ | perl -pe 's,^\./,,'; gcc -Ilibmpg123 -I. -MM $i; done

audio.o: audio.c mpg123app.h config.h libmpg123/debug.h config.h \
  httpget.h libmpg123/mpg123.h libmpg123/compat.h xfermem.h module.h \
  audio.h common.h
buffer.o: buffer.c mpg123app.h config.h libmpg123/debug.h config.h \
  httpget.h libmpg123/mpg123.h libmpg123/compat.h xfermem.h module.h \
  audio.h common.h
common.o: common.c mpg123app.h config.h libmpg123/debug.h config.h \
  httpget.h libmpg123/mpg123.h libmpg123/compat.h xfermem.h module.h \
  audio.h common.h
control_generic.o: control_generic.c mpg123app.h config.h \
  libmpg123/debug.h config.h httpget.h libmpg123/mpg123.h \
  libmpg123/compat.h xfermem.h module.h audio.h common.h buffer.h genre.h
genre.o: genre.c
getlopt.o: getlopt.c config.h libmpg123/debug.h config.h getlopt.h
httpget.o: httpget.c mpg123app.h config.h libmpg123/debug.h config.h \
  httpget.h libmpg123/mpg123.h libmpg123/compat.h xfermem.h module.h \
  audio.h libmpg123/true.h
id3print.o: id3print.c libmpg123/mpg123.h mpg123app.h config.h \
  libmpg123/debug.h config.h httpget.h libmpg123/compat.h xfermem.h \
  module.h audio.h genre.h
legacy_module.o: legacy_module.c libmpg123/mpg123.h
libmpg123/compat.o: libmpg123/compat.c config.h libmpg123/compat.h
libmpg123/dct64_altivec.o: libmpg123/dct64_altivec.c libmpg123/mpg123lib_intern.h \
  libmpg123/mpg123.h config.h libmpg123/debug.h libmpg123/compat.h \
  libmpg123/true.h libmpg123/decode.h libmpg123/parse.h libmpg123/frame.h \
  libmpg123/id3.h libmpg123/icy.h libmpg123/reader.h libmpg123/optimize.h
libmpg123/dct64.o: libmpg123/dct64.c libmpg123/mpg123lib_intern.h \
  libmpg123/mpg123.h config.h libmpg123/debug.h libmpg123/compat.h \
  libmpg123/true.h libmpg123/decode.h libmpg123/parse.h libmpg123/frame.h \
  libmpg123/id3.h libmpg123/icy.h libmpg123/reader.h libmpg123/optimize.h
libmpg123/dct64_i386.o: libmpg123/dct64_i386.c libmpg123/mpg123lib_intern.h \
  libmpg123/mpg123.h config.h libmpg123/debug.h libmpg123/compat.h \
  libmpg123/true.h libmpg123/decode.h libmpg123/parse.h libmpg123/frame.h \
  libmpg123/id3.h libmpg123/icy.h libmpg123/reader.h libmpg123/optimize.h
libmpg123/dct64_i486.o: libmpg123/dct64_i486.c libmpg123/mpg123lib_intern.h \
  libmpg123/mpg123.h config.h libmpg123/debug.h libmpg123/compat.h \
  libmpg123/true.h libmpg123/decode.h libmpg123/parse.h libmpg123/frame.h \
  libmpg123/id3.h libmpg123/icy.h libmpg123/reader.h libmpg123/optimize.h
libmpg123/decode_2to1.o: libmpg123/decode_2to1.c libmpg123/mpg123lib_intern.h \
  libmpg123/mpg123.h config.h libmpg123/debug.h libmpg123/compat.h \
  libmpg123/true.h libmpg123/decode.h libmpg123/parse.h libmpg123/frame.h \
  libmpg123/id3.h libmpg123/icy.h libmpg123/reader.h libmpg123/optimize.h
libmpg123/decode_4to1.o: libmpg123/decode_4to1.c libmpg123/mpg123lib_intern.h \
  libmpg123/mpg123.h config.h libmpg123/debug.h libmpg123/compat.h \
  libmpg123/true.h libmpg123/decode.h libmpg123/parse.h libmpg123/frame.h \
  libmpg123/id3.h libmpg123/icy.h libmpg123/reader.h libmpg123/optimize.h
libmpg123/decode_altivec.o: libmpg123/decode_altivec.c libmpg123/mpg123lib_intern.h \
  libmpg123/mpg123.h config.h libmpg123/debug.h libmpg123/compat.h \
  libmpg123/true.h libmpg123/decode.h libmpg123/parse.h libmpg123/frame.h \
  libmpg123/id3.h libmpg123/icy.h libmpg123/reader.h libmpg123/optimize.h
libmpg123/decode.o: libmpg123/decode.c libmpg123/mpg123lib_intern.h \
  libmpg123/mpg123.h config.h libmpg123/debug.h libmpg123/compat.h \
  libmpg123/true.h libmpg123/decode.h libmpg123/parse.h libmpg123/frame.h \
  libmpg123/id3.h libmpg123/icy.h libmpg123/reader.h libmpg123/optimize.h
libmpg123/decode_i386.o: libmpg123/decode_i386.c libmpg123/mpg123lib_intern.h \
  libmpg123/mpg123.h config.h libmpg123/debug.h libmpg123/compat.h \
  libmpg123/true.h libmpg123/decode.h libmpg123/parse.h libmpg123/frame.h \
  libmpg123/id3.h libmpg123/icy.h libmpg123/reader.h libmpg123/optimize.h
libmpg123/decode_i486.o: libmpg123/decode_i486.c libmpg123/mpg123lib_intern.h \
  libmpg123/mpg123.h config.h libmpg123/debug.h libmpg123/compat.h \
  libmpg123/true.h libmpg123/decode.h libmpg123/parse.h libmpg123/frame.h \
  libmpg123/id3.h libmpg123/icy.h libmpg123/reader.h libmpg123/optimize.h
libmpg123/decode_ntom.o: libmpg123/decode_ntom.c libmpg123/mpg123lib_intern.h \
  libmpg123/mpg123.h config.h libmpg123/debug.h libmpg123/compat.h \
  libmpg123/true.h libmpg123/decode.h libmpg123/parse.h libmpg123/frame.h \
  libmpg123/id3.h libmpg123/icy.h libmpg123/reader.h libmpg123/optimize.h
libmpg123/dnoise.o: libmpg123/dnoise.c
libmpg123/equalizer.o: libmpg123/equalizer.c libmpg123/mpg123lib_intern.h \
  libmpg123/mpg123.h config.h libmpg123/debug.h libmpg123/compat.h \
  libmpg123/true.h libmpg123/decode.h libmpg123/parse.h libmpg123/frame.h \
  libmpg123/id3.h libmpg123/icy.h libmpg123/reader.h libmpg123/optimize.h
libmpg123/format.o: libmpg123/format.c libmpg123/mpg123lib_intern.h \
  libmpg123/mpg123.h config.h libmpg123/debug.h libmpg123/compat.h \
  libmpg123/true.h libmpg123/decode.h libmpg123/parse.h libmpg123/frame.h \
  libmpg123/id3.h libmpg123/icy.h libmpg123/reader.h libmpg123/optimize.h
libmpg123/frame.o: libmpg123/frame.c libmpg123/mpg123lib_intern.h \
  libmpg123/mpg123.h config.h libmpg123/debug.h libmpg123/compat.h \
  libmpg123/true.h libmpg123/decode.h libmpg123/parse.h libmpg123/frame.h \
  libmpg123/id3.h libmpg123/icy.h libmpg123/reader.h libmpg123/optimize.h \
  libmpg123/getcpuflags.h
libmpg123/getbits.o: libmpg123/getbits.c mpg123app.h config.h libmpg123/debug.h \
  config.h httpget.h libmpg123/mpg123.h libmpg123/compat.h xfermem.h \
  module.h audio.h common.h
libmpg123/icy.o: libmpg123/icy.c libmpg123/icy.h libmpg123/mpg123.h
libmpg123/id3.o: libmpg123/id3.c libmpg123/mpg123lib_intern.h libmpg123/mpg123.h \
  config.h libmpg123/debug.h libmpg123/compat.h libmpg123/true.h \
  libmpg123/decode.h libmpg123/parse.h libmpg123/frame.h libmpg123/id3.h \
  libmpg123/icy.h libmpg123/reader.h libmpg123/optimize.h
libmpg123/layer1.o: libmpg123/layer1.c libmpg123/mpg123lib_intern.h \
  libmpg123/mpg123.h config.h libmpg123/debug.h libmpg123/compat.h \
  libmpg123/true.h libmpg123/decode.h libmpg123/parse.h libmpg123/frame.h \
  libmpg123/id3.h libmpg123/icy.h libmpg123/reader.h libmpg123/optimize.h \
  libmpg123/getbits.h
libmpg123/layer2.o: libmpg123/layer2.c libmpg123/mpg123lib_intern.h \
  libmpg123/mpg123.h config.h libmpg123/debug.h libmpg123/compat.h \
  libmpg123/true.h libmpg123/decode.h libmpg123/parse.h libmpg123/frame.h \
  libmpg123/id3.h libmpg123/icy.h libmpg123/reader.h libmpg123/optimize.h \
  libmpg123/l2tables.h libmpg123/getbits.h
libmpg123/layer3.o: libmpg123/layer3.c libmpg123/mpg123lib_intern.h \
  libmpg123/mpg123.h config.h libmpg123/debug.h libmpg123/compat.h \
  libmpg123/true.h libmpg123/decode.h libmpg123/parse.h libmpg123/frame.h \
  libmpg123/id3.h libmpg123/icy.h libmpg123/reader.h libmpg123/optimize.h \
  libmpg123/huffman.h libmpg123/getbits.h
libmpg123/libmpg123.o: libmpg123/libmpg123.c libmpg123/mpg123lib_intern.h \
  libmpg123/mpg123.h config.h libmpg123/debug.h libmpg123/compat.h \
  libmpg123/true.h libmpg123/decode.h libmpg123/parse.h libmpg123/frame.h \
  libmpg123/id3.h libmpg123/icy.h libmpg123/reader.h libmpg123/optimize.h \
  libmpg123/getbits.h
libmpg123/optimize.o: libmpg123/optimize.c libmpg123/mpg123lib_intern.h \
  libmpg123/mpg123.h config.h libmpg123/debug.h libmpg123/compat.h \
  libmpg123/true.h libmpg123/decode.h libmpg123/parse.h libmpg123/frame.h \
  libmpg123/id3.h libmpg123/icy.h libmpg123/reader.h libmpg123/optimize.h
libmpg123/parse.o: libmpg123/parse.c libmpg123/mpg123lib_intern.h \
  libmpg123/mpg123.h config.h libmpg123/debug.h libmpg123/compat.h \
  libmpg123/true.h libmpg123/decode.h libmpg123/parse.h libmpg123/frame.h \
  libmpg123/id3.h libmpg123/icy.h libmpg123/reader.h libmpg123/optimize.h \
  libmpg123/getbits.h
libmpg123/readers.o: libmpg123/readers.c libmpg123/mpg123lib_intern.h \
  libmpg123/mpg123.h config.h libmpg123/debug.h libmpg123/compat.h \
  libmpg123/true.h libmpg123/decode.h libmpg123/parse.h libmpg123/frame.h \
  libmpg123/id3.h libmpg123/icy.h libmpg123/reader.h libmpg123/optimize.h
libmpg123/stringbuf.o: libmpg123/stringbuf.c config.h libmpg123/debug.h \
  libmpg123/mpg123.h libmpg123/compat.h
libmpg123/system.o: libmpg123/system.c mpg123app.h config.h libmpg123/debug.h \
  config.h httpget.h libmpg123/mpg123.h libmpg123/compat.h xfermem.h \
  module.h audio.h
libmpg123/tabinit.o: libmpg123/tabinit.c libmpg123/mpg123lib_intern.h \
  libmpg123/mpg123.h config.h libmpg123/debug.h libmpg123/compat.h \
  libmpg123/true.h libmpg123/decode.h libmpg123/parse.h libmpg123/frame.h \
  libmpg123/id3.h libmpg123/icy.h libmpg123/reader.h libmpg123/optimize.h
libmpg123/testcpu.o: libmpg123/testcpu.c libmpg123/getcpuflags.h
module.o: module.c mpg123app.h config.h libmpg123/debug.h config.h \
  httpget.h libmpg123/mpg123.h libmpg123/compat.h xfermem.h module.h \
  audio.h
mpg123.o: mpg123.c mpg123app.h config.h libmpg123/debug.h config.h \
  httpget.h libmpg123/mpg123.h libmpg123/compat.h xfermem.h module.h \
  audio.h common.h getlopt.h buffer.h term.h playlist.h id3print.h \
  libmpg123/getbits.h libmpg123/getcpuflags.h
mpglib.o: mpglib.c libmpg123/mpg123.h
output/aix.o: output/aix.c mpg123app.h config.h libmpg123/debug.h config.h \
  httpget.h libmpg123/mpg123.h libmpg123/compat.h xfermem.h module.h \
  audio.h
output/alib.o: output/alib.c mpg123app.h config.h libmpg123/debug.h config.h \
  httpget.h libmpg123/mpg123.h libmpg123/compat.h xfermem.h module.h \
  audio.h
output/alsa05.o: output/alsa05.c mpg123app.h config.h libmpg123/debug.h config.h \
  httpget.h libmpg123/mpg123.h libmpg123/compat.h xfermem.h module.h \
  audio.h
output/alsa.o: output/alsa.c mpg123app.h config.h libmpg123/debug.h config.h \
  httpget.h libmpg123/mpg123.h libmpg123/compat.h xfermem.h module.h \
  audio.h audio.h module.h
output/coreaudio.o: output/coreaudio.c sfifo.h mpg123app.h config.h \
  libmpg123/debug.h config.h httpget.h libmpg123/mpg123.h \
  libmpg123/compat.h xfermem.h module.h audio.h
output/dummy.o: output/dummy.c mpg123app.h config.h libmpg123/debug.h config.h \
  httpget.h libmpg123/mpg123.h libmpg123/compat.h xfermem.h module.h \
  audio.h
output/esd.o: output/esd.c mpg123app.h config.h libmpg123/debug.h config.h \
  httpget.h libmpg123/mpg123.h libmpg123/compat.h xfermem.h module.h \
  audio.h
output/hp.o: output/hp.c mpg123app.h config.h libmpg123/debug.h config.h \
  httpget.h libmpg123/mpg123.h libmpg123/compat.h xfermem.h module.h \
  audio.h
output/jack.o: output/jack.c mpg123app.h config.h libmpg123/debug.h config.h \
  httpget.h libmpg123/mpg123.h libmpg123/compat.h xfermem.h module.h \
  audio.h
output/libao.o: output/libao.c mpg123app.h config.h libmpg123/debug.h config.h \
  httpget.h libmpg123/mpg123.h libmpg123/compat.h xfermem.h module.h \
  audio.h
output/mint.o: output/mint.c mpg123app.h config.h libmpg123/debug.h config.h \
  httpget.h libmpg123/mpg123.h libmpg123/compat.h xfermem.h module.h \
  audio.h
output/nas.o: output/nas.c mpg123app.h config.h libmpg123/debug.h config.h \
  httpget.h libmpg123/mpg123.h libmpg123/compat.h xfermem.h module.h \
  audio.h
output/os2.o: output/os2.c mpg123app.h config.h libmpg123/debug.h config.h \
  httpget.h libmpg123/mpg123.h libmpg123/compat.h xfermem.h module.h \
  audio.h
output/oss.o: output/oss.c mpg123app.h config.h libmpg123/debug.h config.h \
  httpget.h libmpg123/mpg123.h libmpg123/compat.h xfermem.h module.h \
  audio.h
output/portaudio.o: output/portaudio.c audio.h libmpg123/mpg123.h module.h \
  config.h sfifo.h mpg123app.h libmpg123/debug.h config.h httpget.h \
  libmpg123/compat.h xfermem.h audio.h
output/pulse.o: output/pulse.c config.h mpg123app.h config.h libmpg123/debug.h \
  config.h httpget.h libmpg123/mpg123.h libmpg123/compat.h xfermem.h \
  module.h audio.h audio.h module.h libmpg123/debug.h sfifo.h
output/sdl.o: output/sdl.c audio.h libmpg123/mpg123.h module.h config.h sfifo.h \
  mpg123app.h libmpg123/debug.h config.h httpget.h libmpg123/compat.h \
  xfermem.h audio.h
output/sgi.o: output/sgi.c mpg123app.h config.h libmpg123/debug.h config.h \
  httpget.h libmpg123/mpg123.h libmpg123/compat.h xfermem.h module.h \
  audio.h
output/sun.o: output/sun.c mpg123app.h config.h libmpg123/debug.h config.h \
  httpget.h libmpg123/mpg123.h libmpg123/compat.h xfermem.h module.h \
  audio.h
output/win32.o: output/win32.c mpg123app.h config.h libmpg123/debug.h config.h \
  httpget.h libmpg123/mpg123.h libmpg123/compat.h xfermem.h module.h \
  audio.h
playlist.o: playlist.c mpg123app.h config.h libmpg123/debug.h config.h \
  httpget.h libmpg123/mpg123.h libmpg123/compat.h xfermem.h module.h \
  audio.h getlopt.h term.h playlist.h
sfifo.o: sfifo.c sfifo.h
term.o: term.c mpg123app.h config.h libmpg123/debug.h config.h httpget.h \
  libmpg123/mpg123.h libmpg123/compat.h xfermem.h module.h audio.h \
  buffer.h term.h common.h
wav.o: wav.c mpg123app.h config.h libmpg123/debug.h config.h httpget.h \
  libmpg123/mpg123.h libmpg123/compat.h xfermem.h module.h audio.h
xfermem.o: xfermem.c mpg123app.h config.h libmpg123/debug.h config.h \
  httpget.h libmpg123/mpg123.h libmpg123/compat.h xfermem.h module.h \
  audio.h
libmpg123/dct36_3dnowext.o: libmpg123/dct36_3dnowext.S libmpg123/mangle.h config.h
libmpg123/dct36_3dnow.o: libmpg123/dct36_3dnow.S libmpg123/mangle.h config.h
libmpg123/dct64_3dnowext.o: libmpg123/dct64_3dnowext.S libmpg123/mangle.h config.h
libmpg123/dct64_3dnow.o: libmpg123/dct64_3dnow.S libmpg123/mangle.h config.h
libmpg123/dct64_mmx.o: libmpg123/dct64_mmx.S libmpg123/mangle.h config.h
libmpg123/dct64_sse.o: libmpg123/dct64_sse.S libmpg123/mangle.h config.h
libmpg123/decode_3dnowext.o: libmpg123/decode_3dnowext.S libmpg123/mangle.h \
  config.h libmpg123/decode_sse3d.h
libmpg123/decode_3dnow.o: libmpg123/decode_3dnow.S libmpg123/mangle.h config.h
libmpg123/decode_i586_dither.o: libmpg123/decode_i586_dither.S libmpg123/mangle.h \
  config.h
libmpg123/decode_i586.o: libmpg123/decode_i586.S libmpg123/mangle.h config.h
libmpg123/decode_mmx.o: libmpg123/decode_mmx.S libmpg123/mangle.h config.h
libmpg123/decode_mmxsse.o: libmpg123/decode_mmxsse.S libmpg123/mangle.h config.h
libmpg123/decode_sse.o: libmpg123/decode_sse.S libmpg123/mangle.h config.h \
  libmpg123/decode_sse3d.h
libmpg123/equalizer_3dnow.o: libmpg123/equalizer_3dnow.S libmpg123/mangle.h \
  config.h
libmpg123/getcpuflags.o: libmpg123/getcpuflags.S libmpg123/mangle.h config.h
libmpg123/tabinit_mmx.o: libmpg123/tabinit_mmx.S libmpg123/mangle.h config.h



###########################################################################
###########################################################################
###########################################################################

clean:
	rm -f output/*.o libmpg123/*.o *.o *core *~ mpg123 gmon.out system

prepared-for-install:
	@if [ ! -x mpg123 ]; then \
		echo '###' ; \
		echo '###  Before doing "make install", you have to compile the software.' ; \
		echo '### Type "make" for more information.' ; \
		echo '###' ; \
		exit 1 ; \
	fi

system: libmpg123/mpg123.h libmpg123/system.c
	$(CC) -o $@ -Wall -O2 libmpg123/system.c

install:	prepared-for-install
	#strip mpg123
	if [ -x /usr/ccs/bin/mcs ]; then /usr/ccs/bin/mcs -d mpg123; fi
	mkdir -p $(BINDIR)
	mkdir -p $(MANDIR)/man$(SECTION)
	cp -f mpg123 $(BINDIR)
	chmod 755 $(BINDIR)/mpg123
	cp -f ../mpg123.1 $(MANDIR)/man$(SECTION)
	chmod 644 $(MANDIR)/man$(SECTION)/mpg123.1
